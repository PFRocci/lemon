# A series of two-element tuples, one per line, containing two strings.
# The first element must be the name of the Cousins photometric filter,
# while the second is the letter that the Passband class must identify
# when the former is parsed.

"Cousins R", 'R'
"Cousins I", 'I'
"R (Cousins)", 'R'
"I (Cousins)", 'I'
"rCousins", 'R'
"iCousins", 'I'

# Suggested by @paramoreta at issue #81
# https://github.com/vterron/lemon/issues/81

"CousR", 'R'
"Cous I", 'I'
"CousinR", 'R'
"Cousin I", 'I'

# ... and, by extension:

"Cous_R", 'R'
"Cous-I", 'I'
"r-Cousin", 'R'
"Icousin", 'I'

# Extremely convoluted test cases

" coui_-_", 'I'
"-- coUI_-", 'I'
"- _cOui_", 'I'
" _cOUI -", 'I'
"-_ COUI_-", 'I'
"_-_-couR", 'R'
"-coU  -_r-_", 'R'
"-_---CouR_", 'R'
"__CoU-_-r--_", 'R'
" cousInS__i--_", 'I'
"__- couSinsi__", 'I'
" -__-cOUSInsi ", 'I'
" ___CouSInS_i-", 'I'
"-COUsInSi___-_", 'I'
"____ COUsINsi-_ ", 'I'
"__COUSiNsI-", 'I'
"--cousinSr- -", 'R'
"-- -coUSins-r-", 'R'
"   _cOusiNSR _", 'R'
" _cOUsins-r ", 'R'
"  _COUsiNs-  r__", 'R'
"- COUsINS-_r -_-", 'R'
"_icoU_-__", 'I'
"_---icOu-__", 'I'
" -i__COU-", 'I'
"_I--_ (- cou_-)-_ ", 'I'
"-Icou -", 'I'
"_I_ cOU----", 'I'
"I-Cou_- __", 'I'
"--I _ -CoU--", 'I'
"-I -CoU- ", 'I'
"__ICOu_-", 'I'
"-__-ICOU ", 'I'
"__icousINs- -", 'I'
" -icouSins--_-", 'I'
"- icouSIns__", 'I'
"i_ -_cOUsiNs_-", 'I'
"-_i_--(_COUsiNS ) ", 'I'
" __i_COUsInS__", 'I'
"_- -I__(_ cOUSInS- -__)__-_-", 'I'
"ICousins-", 'I'
"__rcou--", 'R'
"-r-- (_-cou__ -)--_-", 'R'
"---rcOU-_ ", 'R'
"_RcOU-__-_", 'R'
"_RCOU -", 'R'
" rCoUsInS___ ", 'R'
" -_r_-( __COusInS_-__) -- _", 'R'
"__rCOUsins-", 'R'
"  R-__ (--COusInS_)__-", 'R'
